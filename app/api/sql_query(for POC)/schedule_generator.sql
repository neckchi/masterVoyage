WITH POL AS (
    SELECT
        VL.PROVIDER AS DATA_SOURCE,
        VL.CARRIER_CODE AS SCAC,
        VL.ORIGIN AS POL_PORT_CODE,
        VL.DESTINATION AS POD_PORT_CODE,
        VN.NAME AS VESSEL_NAME,
        VL.LLOYDS_CODE AS VESSEL_IMO,
        VV.CARRIER_VOYAGE_KEY AS VOYAGE_NUM,
        VL.SERVICE_CODE AS SERVICE_CODE,
        VV.END_TIME AS POL_END_TIME,
        VL.START_TIME AS POL_EVENT_TIME,
        VL.END_TIME AS POD_EVENT_TIME
    FROM
        VOYAGE_LEG VL
            LEFT JOIN
        VESSEL_VOYAGE VV ON VL.VESSEL_VOYAGE_ID = VV.ID
            LEFT JOIN
        M_VESSEL V ON VV.VESSEL_ID = V.ID
            LEFT JOIN
        M_VESSEL_NAME VN ON V.ID = VN.VESSEL_ID
    WHERE
        SUBSTR(VL.PROVIDER, LENGTH(VL.PROVIDER) - 2, 3) = '_IB'
      AND VV.IS_ACTIVE = 1
      AND VL.ORIGIN = :pol
--        AND (:service_code IS NULL OR VL.SERVICE_CODE = :service_code)
      AND VL.START_TIME BETWEEN TO_DATE(:etd_start, 'YYYY-MM-DD') AND TO_DATE(:etd_end, 'YYYY-MM-DD')
),
     SUBSTITUTE_POD AS (
         SELECT
             SC.CODE AS SCAC,
             V.LLOYDS_CODE AS VESSEL_IMO,
             VV.CARRIER_VOYAGE_KEY AS SUB_VOYAGE_NUM,
             VV.CARRIER_SERVICE_CODE AS SUB_SERVICE_CODE,
             GA.CODE AS SUB_POD_PORT_CODE,
             VVPT.TIME AS SUB_POD_EVENT_TIME,
             VV.END_TIME AS SUB_END_TIME,
             ROW_NUMBER() OVER (PARTITION BY VV.CARRIER_SERVICE_CODE, V.LLOYDS_CODE, SC.CODE ORDER BY VV.END_TIME, VV.CARRIER_VOYAGE_KEY, VV.CARRIER_SERVICE_CODE) AS rn
         FROM
             VESSEL_VOYAGE VV
                 JOIN
             VESSEL_VOYAGE_PORT_STOP VVPT ON VV.ID = VVPT.VOYAGE_ID
                 JOIN
             M_GEOGRAPHICAL_AREA GA ON VVPT.PORT_ID = GA.ID
                 JOIN
             M_SEAFREIGHT_CARRIER SC ON VV.CARRIER_ID = SC.ID
                 JOIN
             M_VESSEL V ON VV.VESSEL_ID = V.ID
                 JOIN
             M_VESSEL_NAME VN ON V.ID = VN.VESSEL_ID
         WHERE
             VV.IS_ACTIVE = 1
           AND V.IS_ACTIVE = 1
           AND SUBSTR(VV.DATA_SOURCE, LENGTH(VV.DATA_SOURCE) - 2, 3) = '_IB'
           AND VVPT.EVENT = 'UNL'
           AND GA.CODE = :pod
           AND VVPT.TIME > TO_DATE(:etd_start, 'YYYY-MM-DD')
     )
SELECT DISTINCT
    POL.DATA_SOURCE,
    POL.SCAC,
    POL.POL_PORT_CODE,
    POL.POD_PORT_CODE,
    POL.VESSEL_NAME,
    POL.VESSEL_IMO,
    POL.VOYAGE_NUM,
    POL.SERVICE_CODE,
    POL.POL_EVENT_TIME,
    POL.POD_EVENT_TIME,
    NULL AS SUB_POD_PORT_CODE,
    NULL AS SUB_POD_EVENT_TIME,
    NULL AS SUB_VOYAGE_NUM
FROM
    POL
WHERE
    POL.POD_PORT_CODE = :pod

UNION ALL

SELECT DISTINCT
    POL.DATA_SOURCE,
    POL.SCAC,
    POL.POL_PORT_CODE,
    NULL AS POD_PORT_CODE,
    POL.VESSEL_NAME,
    POL.VESSEL_IMO,
    POL.VOYAGE_NUM,
    POL.SERVICE_CODE,
    POL.POL_EVENT_TIME,
    NULL AS POD_EVENT_TIME,
    SP.SUB_POD_PORT_CODE,
    SP.SUB_POD_EVENT_TIME,
    SP.SUB_VOYAGE_NUM
FROM
    POL
        LEFT JOIN (
        SELECT
            SUB_SERVICE_CODE,
            SUB_VOYAGE_NUM,
            SUB_POD_PORT_CODE,
            SUB_POD_EVENT_TIME,
            VESSEL_IMO,
            SCAC,
            SUB_END_TIME
        FROM
            SUBSTITUTE_POD
        WHERE
            rn = 1
    ) SP ON POL.SERVICE_CODE = SP.SUB_SERVICE_CODE
        AND POL.VESSEL_IMO = SP.VESSEL_IMO
        AND POL.SCAC = SP.SCAC
        AND POL.VOYAGE_NUM <> SP.SUB_VOYAGE_NUM
        AND POL.POL_END_TIME < SP.SUB_END_TIME
        AND POL.POL_EVENT_TIME < SP.SUB_POD_EVENT_TIME
WHERE
    POL.POD_PORT_CODE <> :pod
  AND SP.SUB_POD_PORT_CODE IS NOT NULL
OFFSET :row_offset ROWS FETCH NEXT :max_rows ROWS ONLY